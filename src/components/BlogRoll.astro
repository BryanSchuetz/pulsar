---
import { formatPosts } from "@js/utils";
import { getCollection } from 'astro:content';
import {relativeDate } from '@js/utils.js'
import type { CollectionEntry } from "astro:content";
const allPosts = await getCollection('posts');
const formattedPosts = formatPosts(allPosts);
import {stripMarkdown} from '@js/utils.js';
---
<div class="bg-white">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-4xl">
      <div class="md:grid md:grid-cols-2 lg:grid-cols-3 md:gap-8 ">
      {formattedPosts.map((post:CollectionEntry<"posts">, index:number) =>(
        <article class={`flex p-4 mb-4 max-w-xl flex-col items-start ${index === 0 ? '' : ''}`}>
          <div class="flex items-center gap-x-4 text-xs">
            <time datetime="2020-03-16" class="text-gray-500">{relativeDate(post.data.pubDate)}</time>
            <a href={`/categories/${post.data.category}`}
            class="plain relative z-10 rounded-full bg-gray-50 px-3 py-1.5 font-medium text-gray-600 hover:bg-gray-100">{post.data.category}</a>
          </div>
          <div class="group relative">
            <h3 class="mt-3 text-lg font-semibold leading-6 text-gray-900 group-hover:text-gray-600">
              <a href={`/${post.slug}`} class="plain">
              <span class="absolute inset-0"></span>
              {post.data.title}
              </a>
            </h3>
            <p>{post.data.description && stripMarkdown(post.data.description).substring(0,50)}...</p>
          </div>
        </article>
      ))}
      </div>
    </div>
  </div>
</div>
